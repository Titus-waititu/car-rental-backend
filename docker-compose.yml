version: '3.9'

services:
  car-rental-db:
    image: postgres:15-alpine
    container_name: car-rental-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: car-rental-db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes: 
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-your_redis_password}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-your_redis_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  car-rental:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car-rental
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
      PORT: 8000

      # DB
      DB_HOST: car-rental-db
      DB_PORT: 5432
      DB_NAME: car-rental-db
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_SYNC: true
      DB_LOGGING: true

      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-your_redis_password}@redis:6379

      # JWT
      JWT_ACCESS_TOKEN_SECRET: ${JWT_ACCESS_TOKEN_SECRET:-access_secret}
      JWT_REFRESH_TOKEN_SECRET: ${JWT_REFRESH_TOKEN_SECRET:-refresh_secret}
      JWT_VERIFICATION_TOKEN_SECRET: ${JWT_VERIFICATION_TOKEN_SECRET:-verification_secret}
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: 50m
      JWT_REFRESH_TOKEN_EXPIRATION_TIME: 7d
      JWT_RESET_TOKEN_SECRET: ${JWT_RESET_TOKEN_SECRET:-reset_secret}
      JWT_RESET_TOKEN_EXPIRATION_TIME: 1h
      JWT_VERIFICATION_TOKEN_EXPIRATION_TIME: 1d
      JWT_SECRET: ${JWT_SECRET:-jwt_secret}

      # Email
      EMAIL: ${EMAIL}
      PASSWORD: ${PASSWORD}
      EMAIL_RESET_PASSWORD_URL: ${EMAIL_RESET_PASSWORD_URL}

      # Throttle
      THROTTLE_TTL: 60000
      THROTTLE_LIMIT: 100

      # M-Pesa
      CONSUMER_KEY: ${CONSUMER_KEY}
      CONSUMER_SECRET: ${CONSUMER_SECRET}
      SHORTCODE: ${SHORTCODE}
      PASS_KEY: ${PASS_KEY}
      MPESA_CALLBACK_URL: ${MPESA_CALLBACK_URL}

    depends_on:
      redis:
        condition: service_healthy
      car-rental-db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network

volumes:
  pgdata:
    name: car-rental-pgdata
  redis-data:
    name: car-rental-redis-data

networks:
  app-network:
    driver: bridge
